<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pro-Git-the-Book on Bluegill</title><link>https://hxhue.github.io/categories/pro-git-the-book/</link><description>Recent content in Pro-Git-the-Book on Bluegill</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sat, 26 Apr 2025 00:00:00 +0800</lastBuildDate><atom:link href="https://hxhue.github.io/categories/pro-git-the-book/rss.xml" rel="self" type="application/rss+xml"/><item><title>7.8 Git Tools - Advanced Merging</title><link>https://hxhue.github.io/pro-git-the-book/7.8-Git-Tools-Advanced-Merging/</link><pubDate>Sat, 10 Feb 2024 00:00:00 +0800</pubDate><guid>https://hxhue.github.io/pro-git-the-book/7.8-Git-Tools-Advanced-Merging/</guid><description>&lt;h1 id="终止合并">终止合并
&lt;a class="header-anchor" href="#%e7%bb%88%e6%ad%a2%e5%90%88%e5%b9%b6">&lt;/a>
&lt;/h1>&lt;p>可以用 &lt;code>git merge --abort&lt;/code>，就不要用 &lt;code>git reset --hard&lt;/code> 了。&lt;/p>
&lt;h1 id="合并的时候忽略空白字符">合并的时候忽略空白字符
&lt;a class="header-anchor" href="#%e5%90%88%e5%b9%b6%e7%9a%84%e6%97%b6%e5%80%99%e5%bf%bd%e7%95%a5%e7%a9%ba%e7%99%bd%e5%ad%97%e7%ac%a6">&lt;/a>
&lt;/h1>&lt;p>&lt;code>git merge&lt;/code> 时加入参数 &lt;code>-Xignore-all-space&lt;/code> or &lt;code>-Xignore-space-change&lt;/code>。&lt;/p>
&lt;p>最好还是不用，因为这样容易出现混合的换行方式（&lt;code>\n&lt;/code> 和 &lt;code>\r\n&lt;/code>）。&lt;/p>
&lt;h1 id="手动-re-merging">手动 re-merging
&lt;a class="header-anchor" href="#%e6%89%8b%e5%8a%a8-re-merging">&lt;/a>
&lt;/h1>&lt;p>讲的是 &lt;code>git merge-file&lt;/code> 的用法。和手动修改相比，这样做更容易脚本化，因为很多命令行工具只能对没有 conflict markers 的源码处理。&lt;/p></description></item><item><title>7.9 Git Tools - Rerere</title><link>https://hxhue.github.io/pro-git-the-book/7.9-Git-Tools-Rerere/</link><pubDate>Sat, 10 Feb 2024 00:00:00 +0800</pubDate><guid>https://hxhue.github.io/pro-git-the-book/7.9-Git-Tools-Rerere/</guid><description>&lt;p>&lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Rerere" title="https://git-scm.com/book/en/v2/Git-Tools-Rerere" rel="noopener external nofollow noreferrer"
 target="_blank" class=" exturl" >https://git-scm.com/book/en/v2/Git-Tools-Rerere&lt;i class="fa fa-external-link-alt">&lt;/i>&lt;/a>&lt;/p>
&lt;h1 id="rerere-的一些性质">rerere 的一些性质
&lt;a class="header-anchor" href="#rerere-%e7%9a%84%e4%b8%80%e4%ba%9b%e6%80%a7%e8%b4%a8">&lt;/a>
&lt;/h1>&lt;p>rerere 没有默认开启。&lt;/p>
&lt;p>rerere 是在前一步骤合并冲突，生成了含有冲突 markers 的文件之后，根据记录的结果重新应用冲突解决方案的。因而可以手动对冲突了的文件（通过 &lt;code>git checkout --conflict=merge -- &amp;lt;files&amp;gt;&lt;/code> 创建）应用 &lt;code>git rerere&lt;/code>。&lt;/p></description></item><item><title>初读 Pro Git</title><link>https://hxhue.github.io/pro-git-the-book/%E5%88%9D%E8%AF%BB-Pro-Git/</link><pubDate>Thu, 16 Nov 2023 00:00:00 +0800</pubDate><guid>https://hxhue.github.io/pro-git-the-book/%E5%88%9D%E8%AF%BB-Pro-Git/</guid><description>&lt;p>一些需要弄明白的名词：commit range/refspec。&lt;/p>
&lt;h1 id="git-基础">git 基础
&lt;a class="header-anchor" href="#git-%e5%9f%ba%e7%a1%80">&lt;/a>
&lt;/h1>&lt;p>git 的管理方式是记录每个文件的快照。&lt;/p>
&lt;p>






&lt;img src="https://hxhue.github.io/assets/85fc388c6e2e33f14af4af02b672389b.webp">&lt;/p>
&lt;p>然后分成三个区：&lt;/p>
&lt;p>






&lt;img src="https://hxhue.github.io/assets/0a706ecf17b1dad0bff56e9c61c58c73.webp">&lt;/p>
&lt;h1 id="git-add">git add
&lt;a class="header-anchor" href="#git-add">&lt;/a>
&lt;/h1>&lt;p>如果一个文件改动了多个地方，但是只想要提交其中的部分行，可以用 &lt;code>git add --patch&lt;/code>。这样 git 会启动一个交互式的程序，并询问用户每个 chunk 是否要加入。这种交互式环境提供多种操作，其中 &lt;code>e&lt;/code> 操作允许用户使用编辑器精准编辑要添加的修改。&lt;/p></description></item></channel></rss>