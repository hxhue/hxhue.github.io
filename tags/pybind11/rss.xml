<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pybind11 on Bluegill</title><link>https://hxhue.github.io/tags/pybind11/</link><description>Recent content in Pybind11 on Bluegill</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Fri, 06 Dec 2024 00:00:00 +0800</lastBuildDate><atom:link href="https://hxhue.github.io/tags/pybind11/rss.xml" rel="self" type="application/rss+xml"/><item><title>在 VS Code 中从 C++ 调试 pybind</title><link>https://hxhue.github.io/posts/programming/python/%E5%9C%A8-VS-Code-%E4%B8%AD%E4%BB%8E-C++-%E8%B0%83%E8%AF%95-pybind/</link><pubDate>Tue, 05 Nov 2024 00:00:00 +0800</pubDate><guid>https://hxhue.github.io/posts/programming/python/%E5%9C%A8-VS-Code-%E4%B8%AD%E4%BB%8E-C++-%E8%B0%83%E8%AF%95-pybind/</guid><description>&lt;h1 id="使用-debugpy-调试">使用 debugpy 调试
&lt;a class="header-anchor" href="#%e4%bd%bf%e7%94%a8-debugpy-%e8%b0%83%e8%af%95">&lt;/a>
&lt;/h1>&lt;p>在被 C++ 调用的 python 文件中加上这样的内容（端口可以随便选）：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#719e07">import&lt;/span> debugpy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debugpy&lt;span style="color:#719e07">.&lt;/span>listen(&lt;span style="color:#2aa198">5678&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debugpy&lt;span style="color:#719e07">.&lt;/span>wait_for_client()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样在第一次加载这个 python 模块的时候，这行代码就会暂停等待调试器连接。我们可以创建这样的 Python 调试配置，随后连接正在监听端口的 python 程序。&lt;/p></description></item><item><title>在 C++ 项目中使用 Pybind11</title><link>https://hxhue.github.io/posts/programming/cpp/%E5%9C%A8-C++-%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8-Pybind11/</link><pubDate>Fri, 11 Oct 2024 00:00:00 +0800</pubDate><guid>https://hxhue.github.io/posts/programming/cpp/%E5%9C%A8-C++-%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8-Pybind11/</guid><description>&lt;p>安装 pybind11：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip install &lt;span style="color:#2aa198">&amp;#39;pybind11[global]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cmake" data-lang="cmake">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75"># add your executable
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#586e75">&lt;/span>&lt;span style="color:#b58900">set&lt;/span>(&lt;span style="color:#2aa198">PYTHON_EXECUTABLE&lt;/span> &lt;span style="color:#2aa198">/opt/miniforge3/bin/python&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b58900">find_package&lt;/span>(&lt;span style="color:#2aa198">pybind11&lt;/span> &lt;span style="color:#2aa198">REQUIRED&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b58900">target_link_libraries&lt;/span>(&lt;span style="color:#2aa198">your_executable&lt;/span> &lt;span style="color:#2aa198">PRIVATE&lt;/span> &lt;span style="color:#2aa198">pybind11::pybind11&lt;/span> &lt;span style="color:#2aa198">pybind11::embed&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置 &lt;code>PYTHON_EXECUTABLE&lt;/code> 可以确保 pybind11 使用正确的 python 版本，这样才能在里面找到你安装好的其他的包。&lt;/p></description></item><item><title>pybind11 CMake 不能编译和运行</title><link>https://hxhue.github.io/posts/cli/cmake/pybind11-CMake-%E4%B8%8D%E8%83%BD%E7%BC%96%E8%AF%91%E5%92%8C%E8%BF%90%E8%A1%8C/</link><pubDate>Sat, 13 Jan 2024 00:00:00 +0800</pubDate><guid>https://hxhue.github.io/posts/cli/cmake/pybind11-CMake-%E4%B8%8D%E8%83%BD%E7%BC%96%E8%AF%91%E5%92%8C%E8%BF%90%E8%A1%8C/</guid><description>&lt;p>主要问题：加了 &lt;code>add_subdirectory&lt;/code> 但是仍然无法找到头文件。&lt;/p>
&lt;p>解决方案：先加上 &lt;code>find_package(Python3 COMPONENTS Interpreter Development)&lt;/code> 再添加 pybind11 子文件夹。不然 pybind11 找到的 python 版本可能不对。&lt;/p></description></item></channel></rss>